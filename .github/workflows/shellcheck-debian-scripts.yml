name: ShellCheck Debian package scripts

env:
  # If you change this env, please update the on.(pull_request|push).paths keys as well
  # because these keys are hardcoded as they are unable to use the env variables.
  # This is a space separated string. Do not use curly braces
  # as git ls-files do not support curly braces in globs.
  # Assumption: the resolved filepaths do not contain spaces.
  GLOBS_TO_SHELLCHECK: "**/*.postinst **/*.postrm **/*.preinst **/*.prerm"

on:
  pull_request:
    branches:
      - 'ubuntu/**'
    # Harcoded array based on the env.GLOBS_TO_SHELLCHECK key
    paths: ["**/*.postinst","**/*.postrm","**/*.preinst","**/*.prerm"]
  push:
    branches:
      - 'ubuntu/**'
     # Harcoded array based on the env.GLOBS_TO_SHELLCHECK key
    paths: ["**/*.postinst","**/*.postrm","**/*.preinst","**/*.prerm"]

concurrency:
  group: 'ci-${{ github.workflow }}-${{ github.ref }}'
  cancel-in-progress: true

defaults:
  run:
    shell: sh -ex {0}

# Note: No need to specify the shell option in the shellcheck command.
# These linted scripts are for ubuntu so the !/bin/sh (i.e. system shell) shebang at the top of these scripts will point to bash.
# So no need to pass the shell option to the shellcheck command as shellcheck will read the shebang at the top of the file (system shell) so will use the
# system shell of the runner (bash because the runner is using Ubuntu images)
jobs:
  shellcheck-on-all-matching-files:
    name: ShellCheck on all matching files in the repo
    runs-on: ubuntu-24.04
    continue-on-error: true
    steps:
      - name: Repository checkout
        uses: actions/checkout@v4

      - name: Run ShellCheck
        run: |
          echo "The globs to check are ${GLOBS_TO_SHELLCHECK}"
          ALL_MATCHING_SCRIPTS=$(git ls-files ${GLOBS_TO_SHELLCHECK} | tr '\n' ' ')
          echo "The matching scripts to shellcheck are ${ALL_MATCHING_SCRIPTS}"
          if [ -z "${ALL_MATCHING_SCRIPTS}" ]
          then
            echo "There are no files in the repo which match the glob patterns so shellcheck will not run"
          else
            shellcheck ${ALL_MATCHING_SCRIPTS}
          fi

  shellcheck-on-matching-and-changed-files:
    name: ShellCheck on matching files that have changed
    runs-on: ubuntu-24.04
    continue-on-error: true
    steps:
      - name: Repository checkout
        uses: actions/checkout@v4

      - name: Get all matching changed files
        id: matching-changed-files
        uses: tj-actions/changed-files@v46
        with:
          files: ${{ env.GLOBS_TO_SHELLCHECK }}
          files_separator: " "

      - name: Run shellcheck on the matching changed files
        env:
          ALL_CHANGED_FILES: ${{ steps.matching-changed-files.outputs.all_changed_and_modified_files }}
        run: |
          echo "The changed and modified (including deleted) files are ${{ steps.matching-changed-files.outputs.all_changed_and_modified_files }}"
          echo "The globs to check are ${GLOBS_TO_SHELLCHECK}"
          MATCHING_CHANGED_FILES=$(git ls-files ${ALL_CHANGED_FILES} | tr '\n' ' ')
          echo "The matching and changed files are ${MATCHING_CHANGED_FILES}"
          if [ -z "${MATCHING_CHANGED_FILES}" ]
          then
            echo "There are no files in the repo which match the glob pattern \'${GLOBS_TO_SHELLCHECK}\' so shellcheck will not run"
          else
            shellcheck ${MATCHING_CHANGED_FILES}
          fi

  differential-shellcheck:
    name: Run Differential shellcheck
    runs-on: ubuntu-24.04

    permissions:
      security-events: write

    steps:
      - name: Repository checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Differential ShellCheck
        uses: redhat-plumbers-in-action/differential-shellcheck@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          include-path: ${{ env.GLOBS_TO_SHELLCHECK }}